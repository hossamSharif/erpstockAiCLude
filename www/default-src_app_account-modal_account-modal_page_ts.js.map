{"version":3,"file":"default-src_app_account-modal_account-modal_page_ts.js","mappings":"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","sources":["./src/app/account-modal/account-modal.page.ts","./src/app/services/account-communication.service.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { LoadingController, ToastController, NavController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServicesService } from '../stockService/services.service';\nimport { Storage } from '@ionic/storage';\nimport { AccountCommunicationService } from '../services/account-communication.service';\n\n@Component({\n  selector: 'app-account-modal',\n  templateUrl: './account-modal.page.html',\n  styleUrls: ['./account-modal.page.scss'],\n})\nexport class AccountModalPage implements OnInit {\n  mode: 'create' | 'edit' = 'create';\n  account: any;\n  account_category: Array<any> = [];\n  main_account: Array<any> = [];\n\n  // Form data\n  payInvo: {\n    id: any;\n    ac_id: any;\n    sub_name: any;\n    sub_type: any;\n    sub_code: any;\n    sub_balance: any;\n    store_id: any;\n    cat_id: any;\n    cat_name: any;\n    ac_behavior: any;\n    phone: any;\n    address: any;\n  };\n\n  selectedMainAccount: {\n    ac_id: any;\n    actype_id: any;\n    ac_name: any;\n    ac_code: any;\n    eng_name: any;\n    ac_type: any;\n  };\n\n  selectedCategory: {\n    id: any;\n    cat_name: any;\n  };\n\n  // App info\n  store_info: { id: any; location: any; store_name: any; store_ref: any };\n  user_info: { id: any; user_name: any; store_id: any; full_name: any; password: any };\n  year: { id: any; yearDesc: any; yearStart: any; yearEnd: any };\n\n  // UI state\n  loading: boolean = false;\n  saving: boolean = false;\n\n  constructor(\n    private navController: NavController,\n    private route: ActivatedRoute,\n    private loadingController: LoadingController,\n    private toastController: ToastController,\n    private alertController: AlertController,\n    private api: ServicesService,\n    private storage: Storage,\n    private accountCommunicationService: AccountCommunicationService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.initializeData();\n  }\n\n  ngOnInit() {\n    console.log('Account modal ngOnInit');\n    this.getAppInfo();\n    this.initializeFromRoute();\n  }\n\n  initializeData() {\n    this.payInvo = {\n      id: '',\n      ac_id: '',\n      sub_name: '',\n      sub_type: '',\n      sub_code: '',\n      sub_balance: '',\n      store_id: '',\n      cat_id: '',\n      cat_name: '',\n      ac_behavior: '',\n      phone: '',\n      address: ''\n    };\n\n    this.selectedMainAccount = {\n      ac_id: '',\n      actype_id: '',\n      ac_name: '',\n      ac_code: '',\n      eng_name: '',\n      ac_type: ''\n    };\n\n    this.selectedCategory = {\n      id: '',\n      cat_name: ''\n    };\n  }\n\n  initializeFromRoute() {\n    // Get route parameters\n    this.route.queryParams.subscribe(params => {\n      if (params['mode']) {\n        this.mode = params['mode'];\n      }\n      \n      if (params['account']) {\n        this.account = JSON.parse(params['account']);\n        this.initializeForm();\n      }\n    });\n  }\n\n  initializeForm() {\n    if (this.mode === 'edit' && this.account) {\n      // Fill form with existing account data\n      this.payInvo = {\n        id: this.account.id,\n        ac_id: this.account.ac_id,\n        sub_name: this.account.sub_name,\n        sub_type: this.account.sub_type,\n        sub_code: this.account.sub_code,\n        sub_balance: this.account.sub_balance,\n        store_id: this.account.store_id,\n        cat_id: this.account.cat_id,\n        cat_name: this.account.cat_name,\n        ac_behavior: this.account.ac_behavior,\n        phone: this.account.phone,\n        address: this.account.address\n      };\n\n      // Category will be set after data is loaded in setCategoryForEdit()\n\n      // Set main account after data is loaded\n      this.setMainAccountForEdit();\n    }\n  }\n\n  setMainAccountForEdit() {\n    if (this.main_account && this.main_account.length > 0 && this.account) {\n      const mainAcc = this.main_account.find(acc => acc.ac_id == this.account.ac_id);\n      if (mainAcc) {\n        this.selectedMainAccount = {\n          ac_id: mainAcc.ac_id,\n          actype_id: mainAcc.actype_id,\n          ac_name: mainAcc.ac_name,\n          ac_code: mainAcc.ac_code,\n          eng_name: mainAcc.eng_name,\n          ac_type: mainAcc.ac_type\n        };\n      }\n    }\n  }\n\n  setCategoryForEdit() {\n    if (this.account_category && this.account_category.length > 0 && this.account) {\n      const category = this.account_category.find(cat => cat.id == this.account.cat_id);\n      if (category) {\n        this.selectedCategory = {\n          id: category.id,\n          cat_name: category.cat_name\n        };\n        // Also update the payInvo category fields to ensure consistency\n        this.payInvo.cat_id = category.id;\n        this.payInvo.cat_name = category.cat_name;\n        \n        // Force change detection to update UI\n        this.cdr.detectChanges();\n        \n        console.log('Category set for edit mode:', this.selectedCategory);\n      } else {\n        console.log('Category not found for id:', this.account.cat_id);\n      }\n    }\n  }\n\n  getAppInfo() {\n    this.storage.get('USER_INFO').then((response) => {\n      if (response) {\n        this.user_info = response;\n        console.log('User info loaded:', this.user_info);\n      }\n    });\n\n    this.storage.get('year').then((response) => {\n      if (response) {\n        this.year = response;\n        console.log('Year loaded:', this.year);\n      }\n    });\n\n    this.storage.get('STORE_INFO').then((response) => {\n      if (response) {\n        this.store_info = response;\n        this.payInvo.store_id = this.store_info.id;\n        console.log('Store info loaded:', this.store_info);\n        \n        // Load supporting data after store info is available\n        this.loadSupportingData();\n      }\n    });\n  }\n\n  loadSupportingData() {\n    console.log('Loading supporting data...');\n    // Load main accounts first\n    this.getMainAccount();\n    \n    // Load account categories\n    this.getAccountCategory();\n  }\n\n  getMainAccount() {\n    this.api.getMainAccounts().subscribe(data => {\n      let res = data;\n      this.main_account = res['data'] || [];\n      console.log('Main accounts loaded:', this.main_account);\n      \n      // Set main account for edit mode after data is loaded\n      if (this.mode === 'edit' && this.account) {\n        this.setMainAccountForEdit();\n      }\n    }, (err) => {\n      console.log('Error loading main accounts:', err);\n    });\n  }\n\n  getAccountCategory() {\n    if (this.store_info && this.store_info.id) {\n      console.log('Loading categories for store:', this.store_info.id);\n      this.api.getAccountCategory(this.store_info.id).subscribe(data => {\n        let res = data;\n        this.account_category = res['data'] || [];\n        console.log('Account categories loaded:', this.account_category);\n        \n        // Set category for edit mode after data is loaded\n        if (this.mode === 'edit' && this.account) {\n          // Use setTimeout to ensure DOM is updated before setting category\n          setTimeout(() => {\n            this.setCategoryForEdit();\n          }, 100);\n        }\n      }, (err) => {\n        console.log('Error loading categories:', err);\n      });\n    } else {\n      console.log('Store info not available for loading categories');\n    }\n  }\n\n  pickMainAccount(event: any) {\n    const selectedName = event.detail.value;\n    console.log('Main account selected:', selectedName);\n    const mainAcc = this.main_account.find(x => x.ac_name === selectedName);\n    \n    if (mainAcc) {\n      this.selectedMainAccount = {\n        ac_id: mainAcc.ac_id,\n        ac_name: mainAcc.ac_name,\n        actype_id: mainAcc.actype_id,\n        ac_code: mainAcc.ac_code,\n        eng_name: mainAcc.eng_name,\n        ac_type: mainAcc.ac_type\n      };\n      \n      this.payInvo.ac_id = this.selectedMainAccount.ac_id;\n      this.payInvo.sub_type = this.selectedMainAccount.ac_type;\n      this.payInvo.ac_behavior = this.selectedMainAccount.ac_type;\n      \n      console.log('Selected main account:', mainAcc);\n      console.log('Auto-selected account type:', this.selectedMainAccount.ac_type);\n    } else {\n      this.presentToast('خطأ في اسم الحساب', 'danger');\n    }\n  }\n\n  pickAccountCategory(event: any) {\n    const selectedName = event.detail.value;\n    console.log('Category selected:', selectedName);\n    const category = this.account_category.find(x => x.cat_name === selectedName);\n    \n    if (category) {\n      this.selectedCategory = {\n        id: category.id,\n        cat_name: category.cat_name\n      };\n      \n      this.payInvo.cat_id = this.selectedCategory.id;\n      this.payInvo.cat_name = this.selectedCategory.cat_name;\n      \n      console.log('Selected category:', category);\n      console.log('Show phone/address fields:', this.shouldShowPhoneAndAddress());\n    } else {\n      this.presentToast('خطأ في اسم التصنيف', 'danger');\n    }\n  }\n\n  // Check if phone and address fields should be shown (categories 1 and 2: عملاء, موردين)\n  shouldShowPhoneAndAddress(): boolean {\n    if (this.selectedCategory && this.selectedCategory.id) {\n      const categoryId = parseInt(this.selectedCategory.id);\n      return categoryId === 1 || categoryId === 2;\n    }\n    return false;\n  }\n\n  async save() {\n    if (!this.validate()) {\n      return;\n    }\n\n    this.saving = true;\n    const loading = await this.loadingController.create({\n      message: 'جاري حفظ البيانات...',\n      spinner: 'crescent'\n    });\n    await loading.present();\n\n    try {\n      let result;\n      if (this.mode === 'create') {\n        result = await this.createAccount();\n      } else {\n        result = await this.updateAccount();\n      }\n      \n      await loading.dismiss();\n      this.saving = false;\n      \n      // If account was created successfully, send it via service\n      if (this.mode === 'create' && result) {\n        console.log('Account created successfully, result:', result);\n        console.log('payInvo data:', this.payInvo);\n        \n        // Get the ID from the API response (the backend returns {message: \"513\"})\n        const newAccountId = result.message;\n        \n        const accountData = {\n          id: newAccountId,\n          ac_id: this.payInvo.ac_id,\n          sub_name: this.payInvo.sub_name,\n          sub_type: this.payInvo.sub_type,\n          sub_code: this.payInvo.sub_code,\n          sub_balance: this.payInvo.sub_balance,\n          store_id: this.payInvo.store_id,\n          cat_id: this.payInvo.cat_id,\n          cat_name: this.payInvo.cat_name,\n          phone: this.payInvo.phone,\n          address: this.payInvo.address\n        };\n        \n        console.log('Sending account data with ID:', newAccountId, accountData);\n        \n        // Send the new account via service\n        this.accountCommunicationService.setNewAccount(accountData);\n      }\n      \n      this.navigateBack();\n    } catch (error) {\n      await loading.dismiss();\n      this.saving = false;\n      this.presentToast('خطأ في حفظ البيانات', 'danger');\n    }\n  }\n\n  private createAccount(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // Pass the account object directly, not as an array\n      this.api.createAccount(this.payInvo).subscribe(\n        (data: any) => {\n          if (data['message'] !== 'Post Not Created') {\n            this.presentToast('تم حفظ الحساب بنجاح', 'success');\n            resolve(data);\n          } else {\n            this.presentToast('فشل في إنشاء الحساب', 'danger');\n            reject(data);\n          }\n        },\n        (error) => {\n          this.presentToast('خطأ في الاتصال', 'danger');\n          reject(error);\n        }\n      );\n    });\n  }\n\n  private updateAccount(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.api.updateSubAccount(this.payInvo).subscribe(\n        (data: any) => {\n          if (data['message'] !== 'Post Not Created') {\n            this.presentToast('تم تحديث الحساب بنجاح', 'success');\n            resolve(data);\n          } else {\n            this.presentToast('فشل في تحديث الحساب', 'danger');\n            reject(data);\n          }\n        },\n        (error) => {\n          this.presentToast('خطأ في الاتصال', 'danger');\n          reject(error);\n        }\n      );\n    });\n  }\n\n  validate(): boolean {\n    if (!this.payInvo.sub_name || this.payInvo.sub_name.trim() === '') {\n      this.presentToast('الرجاء إدخال اسم الحساب', 'danger');\n      return false;\n    }\n\n    if (!this.payInvo.sub_type || this.payInvo.sub_type === '') {\n      this.presentToast('الرجاء اختيار طبيعة الحساب', 'danger');\n      return false;\n    }\n\n    if (!this.selectedMainAccount.ac_id || this.selectedMainAccount.ac_name === '') {\n      this.presentToast('الرجاء اختيار الحساب الرئيسي', 'danger');\n      return false;\n    }\n\n    return true;\n  }\n\n  async presentToast(message: string, color: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      color: color,\n      cssClass: 'cust_Toast',\n      mode: 'ios',\n      position: 'top'\n    });\n    await toast.present();\n  }\n\n  closeModal() {\n    this.navigateBack();\n  }\n\n  navigateBack() {\n    this.navController.back();\n  }\n\n  // Delete functionality with safety checks\n  async deleteAccount() {\n    if (this.mode !== 'edit' || !this.payInvo.id) {\n      this.presentToast('لا يمكن حذف حساب غير محفوظ', 'danger');\n      return;\n    }\n\n    const alert = await this.alertController.create({\n      header: 'تأكيد الحذف',\n      message: `هل تريد حذف الحساب \"${this.payInvo.sub_name}\"؟`,\n      buttons: [\n        {\n          text: 'إلغاء',\n          role: 'cancel',\n          cssClass: 'secondary'\n        },\n        {\n          text: 'حذف',\n          cssClass: 'danger',\n          handler: () => {\n            this.checkAccountUsageAndDelete();\n          }\n        }\n      ]\n    });\n    \n    await alert.present();\n  }\n\n  async checkAccountUsageAndDelete() {\n    const loading = await this.loadingController.create({\n      message: 'جاري التحقق من استخدام الحساب...',\n      spinner: 'crescent'\n    });\n    await loading.present();\n\n    try {\n      // Check if account is used in any transactions\n      const canDelete = await this.checkAccountCanBeDeleted();\n      \n      if (canDelete) {\n        // Dismiss the check loading and perform delete\n        await loading.dismiss();\n        await this.performDelete();\n      } else {\n        await loading.dismiss();\n        this.presentToast('لا يمكن حذف الحساب لأنه مستخدم في معاملات أخرى', 'danger');\n      }\n    } catch (error) {\n      await loading.dismiss();\n      this.presentToast('خطأ في التحقق من استخدام الحساب', 'danger');\n    }\n  }\n\n  private checkAccountCanBeDeleted(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      // Check if account is used in journal details (jdetails_from and jdetails_to)\n      // Check if account is used in payments (pay.cust_id)\n      // Check if account is used in purchases (perch.cust_id)\n      \n      this.api.checkAccountUsage(this.payInvo.id).subscribe(\n        (data: any) => {\n          console.log('Account usage check result:', data);\n          \n          // If the API returns usage data, check if account is used\n          if (data && data.data) {\n            const usage = data.data;\n            const hasJournalEntries = (usage.jdetails_from_count || 0) > 0 || (usage.jdetails_to_count || 0) > 0;\n            const hasPayments = (usage.pay_count || 0) > 0;\n            const hasPurchases = (usage.perch_count || 0) > 0;\n            \n            const canDelete = !hasJournalEntries && !hasPayments && !hasPurchases;\n            \n            if (!canDelete) {\n              console.log('Account cannot be deleted. Usage:', {\n                journalEntries: hasJournalEntries,\n                payments: hasPayments,\n                purchases: hasPurchases\n              });\n            }\n            \n            resolve(canDelete);\n          } else {\n            // If no usage data returned, assume it's safe to delete\n            resolve(true);\n          }\n        },\n        (error) => {\n          console.error('Error checking account usage:', error);\n          reject(error);\n        }\n      );\n    });\n  }\n\n  private async performDelete() {\n    const deleteLoading = await this.loadingController.create({\n      message: 'جاري حذف الحساب...',\n      spinner: 'crescent'\n    });\n    await deleteLoading.present();\n\n    try {\n      const deleteResult = await this.deleteAccountFromServer();\n      \n      await deleteLoading.dismiss();\n      \n      if (deleteResult) {\n        this.presentToast('تم حذف الحساب بنجاح', 'success');\n        this.navigateBack();\n      } else {\n        this.presentToast('فشل في حذف الحساب', 'danger');\n      }\n    } catch (error) {\n      await deleteLoading.dismiss();\n      this.presentToast('خطأ في حذف الحساب', 'danger');\n    }\n  }\n\n  private deleteAccountFromServer(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      this.api.deleteSubAccont(this.payInvo.id).subscribe(\n        (data: any) => {\n          if (data['message'] !== 'Post Not Deleted') {\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        },\n        (error) => {\n          reject(error);\n        }\n      );\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountCommunicationService {\n  private newAccountSubject = new BehaviorSubject<any>(null);\n  public newAccount$ = this.newAccountSubject.asObservable();\n\n  // For notifying pages to set customer ID in their payInvo\n  private customerSelectedSubject = new Subject<{id: any, account: any}>();\n  public customerSelected$ = this.customerSelectedSubject.asObservable();\n\n  constructor() { }\n\n  // Set new account data (for account selector)\n  setNewAccount(account: any) {\n    console.log('AccountCommunicationService: Setting new account:', account);\n    this.newAccountSubject.next(account);\n    \n    // Also emit customer selection event for pages to update their payInvo\n    if (account && account.id) {\n      this.customerSelectedSubject.next({id: account.id, account: account});\n    }\n  }\n\n  // Emit customer selection (for pages to set cust_id)\n  setCustomerSelected(accountId: any, account: any) {\n    console.log('AccountCommunicationService: Customer selected with ID:', accountId);\n    this.customerSelectedSubject.next({id: accountId, account: account});\n  }\n\n  // Clear the new account data\n  clearNewAccount() {\n    this.newAccountSubject.next(null);\n  }\n\n  // Get current value without subscription\n  getCurrentAccount() {\n    return this.newAccountSubject.value;\n  }\n}"],"names":[],"sourceRoot":"webpack:///"}