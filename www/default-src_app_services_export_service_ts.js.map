{"version":3,"file":"default-src_app_services_export_service_ts.js","mappings":"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","sources":["./src/app/services/export.service.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { jsPDF } from 'jspdf';\r\nimport * as XLSX from 'xlsx';\r\nimport { ToastController, LoadingController, AlertController } from '@ionic/angular';\r\n\r\n// Simple Arabic text processor for better PDF rendering\r\ninterface ArabicTextProcessor {\r\n  process(text: string): string;\r\n}\r\n\r\nexport interface ExportConfig {\r\n  title: string;\r\n  subtitle?: string;\r\n  fileName: string;\r\n  data: any[];\r\n  columns: ExportColumn[];\r\n  userName: string;\r\n  pageType: 'sales-record' | 'purchase-record' | 'item-stock' | 'cash2' | 'statement2' | 'spend-record2' | 'balance-sheet2' | 'sub-account2';\r\n  currentDate?: string;\r\n  maxRows?: number;\r\n}\r\n\r\nexport interface ExportColumn {\r\n  key: string;\r\n  title: string;\r\n  width?: number;\r\n  type?: 'text' | 'number' | 'date' | 'currency';\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportService {\r\n  private readonly MAX_ROWS_WARNING = 1000;\r\n  private readonly MAX_ROWS_LIMIT = 5000;\r\n  \r\n  private toastController!: ToastController;\r\n  private loadingController!: LoadingController;\r\n  private alertController!: AlertController;\r\n\r\n  private pdfMakeInitialized = false;\r\n\r\n  constructor(private injector: Injector) {\r\n    // PDFMake will be initialized lazily when first used\r\n  }\r\n\r\n  private getToastController(): ToastController {\r\n    if (!this.toastController) {\r\n      this.toastController = this.injector.get(ToastController);\r\n    }\r\n    return this.toastController;\r\n  }\r\n\r\n  private getLoadingController(): LoadingController {\r\n    if (!this.loadingController) {\r\n      this.loadingController = this.injector.get(LoadingController);\r\n    }\r\n    return this.loadingController;\r\n  }\r\n\r\n  private getAlertController(): AlertController {\r\n    if (!this.alertController) {\r\n      this.alertController = this.injector.get(AlertController);\r\n    }\r\n    return this.alertController;\r\n  }\r\n\r\n  private async initializePDFMake(): Promise<any> {\r\n    if (!this.pdfMakeInitialized) {\r\n      try {\r\n        // Dynamic import to avoid circular dependency\r\n        const [pdfMake, pdfFonts] = await Promise.all([\r\n          import('pdfmake/build/pdfmake'),\r\n          import('pdfmake/build/vfs_fonts')\r\n        ]);\r\n        \r\n        // PDFMake modules loaded successfully\r\n        \r\n        // Handle different possible module structures\r\n        let vfs;\r\n        if (pdfFonts.pdfMake && pdfFonts.pdfMake.vfs) {\r\n          vfs = pdfFonts.pdfMake.vfs;\r\n        } else if (pdfFonts.default && pdfFonts.default.pdfMake && pdfFonts.default.pdfMake.vfs) {\r\n          vfs = pdfFonts.default.pdfMake.vfs;\r\n        } else if ((pdfFonts as any).vfs) {\r\n          vfs = (pdfFonts as any).vfs;\r\n        } else {\r\n          // Try to access the vfs directly from the module\r\n          vfs = Object.values(pdfFonts)[0];\r\n        }\r\n        \r\n        if (!vfs) {\r\n          throw new Error('Could not find vfs in pdfFonts module');\r\n        }\r\n        \r\n        // Initialize PDFMake with fonts\r\n        (pdfMake as any).vfs = vfs;\r\n        \r\n        // Debug: Log available fonts in VFS\r\n        console.log('Available fonts in VFS:', Object.keys(vfs || {}));\r\n        \r\n        // Configure fonts to use only available VFS fonts\r\n        const availableFonts = Object.keys(vfs || {});\r\n        const hasRoboto = availableFonts.some(font => font.includes('Roboto'));\r\n        \r\n        if (hasRoboto) {\r\n          // Use available Roboto fonts from VFS\r\n          (pdfMake as any).fonts = {\r\n            Roboto: {\r\n              normal: availableFonts.find(f => f.includes('Roboto') && f.includes('Regular')) || availableFonts.find(f => f.includes('Roboto')),\r\n              bold: availableFonts.find(f => f.includes('Roboto') && f.includes('Bold')) || availableFonts.find(f => f.includes('Roboto')),\r\n              italics: availableFonts.find(f => f.includes('Roboto') && f.includes('Italic')) || availableFonts.find(f => f.includes('Roboto')),\r\n              bolditalics: availableFonts.find(f => f.includes('Roboto') && f.includes('Bold') && f.includes('Italic')) || availableFonts.find(f => f.includes('Roboto'))\r\n            }\r\n          };\r\n        } else {\r\n          // If no Roboto, use first available font or fallback\r\n          const firstFont = availableFonts[0];\r\n          if (firstFont) {\r\n            (pdfMake as any).fonts = {\r\n              DefaultFont: {\r\n                normal: firstFont,\r\n                bold: firstFont,\r\n                italics: firstFont,\r\n                bolditalics: firstFont\r\n              }\r\n            };\r\n          }\r\n        }\r\n        \r\n        this.pdfMakeInitialized = true;\r\n        return pdfMake;\r\n      } catch (error) {\r\n        console.error('PDFMake initialization failed:', error);\r\n        throw error;\r\n      }\r\n    } else {\r\n      // If already initialized, return the pdfMake module\r\n      return import('pdfmake/build/pdfmake');\r\n    }\r\n  }\r\n\r\n  private formatDate(date: Date, format: string = 'yyyy-MM-dd HH:mm'): string {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    \r\n    if (format === 'yyyy-MM-dd HH:mm') {\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    } else if (format === 'yyyy-MM-dd') {\r\n      return `${year}-${month}-${day}`;\r\n    }\r\n    \r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  async exportToPDF(config: ExportConfig): Promise<void> {\r\n    // Check data size\r\n    if (!await this.checkDataSize(config.data.length)) {\r\n      return;\r\n    }\r\n\r\n    const loading = await this.getLoadingController().create({\r\n      message: 'جاري تصدير ملف PDF...',\r\n      spinner: 'crescent'\r\n    });\r\n    await loading.present();\r\n\r\n    try {\r\n      // Use PDFMake for better Arabic support\r\n      await this.exportToPDFWithPDFMake(config);\r\n      \r\n      await this.showSuccessToast('تم تصدير ملف PDF بنجاح');\r\n      \r\n    } catch (error) {\r\n      console.error('PDF Export Error:', error);\r\n      await this.showErrorToast('فشل في تصدير ملف PDF');\r\n    } finally {\r\n      await loading.dismiss();\r\n    }\r\n  }\r\n\r\n  private async exportToPDFWithProfessionalTranslation(config: ExportConfig): Promise<void> {\r\n    const doc = new jsPDF({\r\n      orientation: 'landscape',\r\n      unit: 'mm',\r\n      format: 'a4',\r\n      putOnlyUsedFonts: true,\r\n      compress: true\r\n    });\r\n\r\n    // Use standard fonts that work reliably\r\n    doc.setFont('helvetica', 'normal');\r\n    \r\n    // Set document properties with English titles\r\n    doc.setProperties({\r\n      title: 'Inventory Report',\r\n      subject: 'Stock Management Report',\r\n      author: 'ERP System',\r\n      creator: 'Stock Management System'\r\n    });\r\n    \r\n    // Add header with professional translation\r\n    this.addPDFHeaderWithTranslation(doc, config);\r\n    \r\n    // Add table with professional translation\r\n    this.addPDFTableWithTranslation(doc, config);\r\n    \r\n    // Add footer with professional translation\r\n    this.addPDFFooterWithTranslation(doc, config);\r\n\r\n    // Save the PDF\r\n    doc.save(`${config.fileName}.pdf`);\r\n  }\r\n\r\n  private detectArabicText(text: string): boolean {\r\n    if (!text) return false;\r\n    // Check for Arabic characters (U+0600 to U+06FF)\r\n    return /[\\u0600-\\u06FF]/.test(text);\r\n  }\r\n\r\n  private processTextForPDF(text: string): { text: string; alignment?: string } {\r\n    const hasArabic = this.detectArabicText(text);\r\n    \r\n    if (hasArabic) {\r\n      return {\r\n        text: text,\r\n        alignment: 'right'\r\n      };\r\n    } else {\r\n      return {\r\n        text: text,\r\n        alignment: 'left'\r\n      };\r\n    }\r\n  }\r\n\r\n  private async exportToPDFWithPDFMake(config: ExportConfig): Promise<void> {\r\n    try {\r\n      // For now, let's fall back to jsPDF instead of PDFMake due to font issues\r\n      console.warn('PDFMake has font loading issues, falling back to jsPDF');\r\n      return this.exportToPDFWithJSPDF(config);\r\n    } catch (error) {\r\n      console.error('PDF export failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async exportToPDFWithPDFMakeOLD(config: ExportConfig): Promise<void> {\r\n    try {\r\n      // Initialize PDFMake lazily with dynamic import\r\n      const pdfMake = await this.initializePDFMake();\r\n      // Prepare table data for PDFMake\r\n      const tableBody: any[][] = [];\r\n      \r\n      // Add column headers with simple styling\r\n      const headers = config.columns.map(col => {\r\n        const processedHeader = this.processTextForPDF(col.title);\r\n        return {\r\n          text: processedHeader.text,\r\n          alignment: processedHeader.alignment || 'right',\r\n          fillColor: '#4472C4',\r\n          color: 'white'\r\n        };\r\n      });\r\n      tableBody.push(headers);\r\n      \r\n      // Add data rows with simple styling\r\n      config.data.forEach((row, index) => {\r\n        const rowData = config.columns.map(col => {\r\n          const cellValue = this.getCellValue(row, col, index + 1).toString();\r\n          const processedCell = this.processTextForPDF(cellValue);\r\n          \r\n          return {\r\n            text: processedCell.text,\r\n            alignment: col.type === 'number' || col.type === 'currency' ? 'center' : processedCell.alignment || 'right'\r\n          };\r\n        });\r\n        tableBody.push(rowData);\r\n      });\r\n      \r\n      // Minimal PDFMake document definition\r\n      const docDefinition: any = {\r\n        pageSize: 'A4',\r\n        pageOrientation: 'landscape',\r\n        pageMargins: [20, 40, 20, 40],\r\n        defaultStyle: {\r\n          font: 'Roboto'\r\n        },\r\n        \r\n        content: [\r\n          // Simple title\r\n          {\r\n            text: config.title,\r\n            fontSize: 18,\r\n            alignment: 'center',\r\n            margin: [0, 0, 0, 20]\r\n          },\r\n          \r\n          // Simple subtitle if exists\r\n          ...(config.subtitle ? [{\r\n            text: config.subtitle,\r\n            fontSize: 14,\r\n            alignment: 'center',\r\n            margin: [0, 0, 0, 10]\r\n          }] : []),\r\n          \r\n          // Simple date\r\n          {\r\n            text: config.currentDate || this.formatDate(new Date(), 'yyyy-MM-dd'),\r\n            fontSize: 12,\r\n            alignment: 'center',\r\n            margin: [0, 0, 0, 20]\r\n          },\r\n          \r\n          // Simple table\r\n          {\r\n            table: {\r\n              headerRows: 1,\r\n              widths: config.columns.map(col => col.width ? `${col.width}%` : 'auto'),\r\n              body: tableBody\r\n            }\r\n          },\r\n          \r\n          // Footer space\r\n          { text: '', margin: [0, 20, 0, 0] },\r\n          \r\n          // Simple footer\r\n          {\r\n            columns: [\r\n              {\r\n                text: `المستخدم: ${config.userName}`,\r\n                fontSize: 8,\r\n                alignment: 'left'\r\n              },\r\n              {\r\n                text: `تاريخ التصدير: ${this.formatDate(new Date(), 'yyyy-MM-dd HH:mm')}`,\r\n                fontSize: 8,\r\n                alignment: 'right'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      \r\n      // Generate and download PDF\r\n      const pdfDoc = (pdfMake as any).createPdf(docDefinition);\r\n      pdfDoc.download(`${config.fileName}.pdf`);\r\n      \r\n    } catch (error) {\r\n      console.error('PDFMake Export Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async exportToPDFWithJSPDF(config: ExportConfig): Promise<void> {\r\n    try {\r\n      const { jsPDF } = await import('jspdf');\r\n      \r\n      // Create PDF document with basic settings\r\n      const pdf = new jsPDF({\r\n        orientation: 'landscape',\r\n        unit: 'mm',\r\n        format: 'a4'\r\n      });\r\n      \r\n      // Enhanced Arabic text processing\r\n      const processText = (text: string): string => {\r\n        if (!text) return '';\r\n        \r\n        // Check if text contains Arabic characters\r\n        const hasArabic = /[\\u0600-\\u06FF]/.test(text);\r\n        \r\n        if (hasArabic) {\r\n          // Convert Arabic text to a readable English equivalent\r\n          return this.convertArabicForPDF(text);\r\n        }\r\n        \r\n        return text;\r\n      };\r\n      \r\n      // Add title\r\n      pdf.setFontSize(16);\r\n      pdf.text(processText(config.title), 148, 20, { align: 'center' });\r\n      \r\n      // Add subtitle if exists\r\n      let currentY = 30;\r\n      if (config.subtitle) {\r\n        pdf.setFontSize(12);\r\n        pdf.text(processText(config.subtitle), 148, currentY, { align: 'center' });\r\n        currentY += 10;\r\n      }\r\n      \r\n      // Add date\r\n      pdf.setFontSize(10);\r\n      pdf.text(config.currentDate || this.formatDate(new Date(), 'yyyy-MM-dd'), 148, currentY, { align: 'center' });\r\n      currentY += 15;\r\n      \r\n      // Simple table layout\r\n      const startX = 10;\r\n      const rowHeight = 8;\r\n      const pageWidth = 287;\r\n      const colWidth = (pageWidth - 20) / config.columns.length;\r\n      \r\n      // Draw headers\r\n      let currentX = startX;\r\n      config.columns.forEach((col) => {\r\n        pdf.setFillColor(70, 130, 180);\r\n        pdf.rect(currentX, currentY, colWidth, rowHeight, 'F');\r\n        pdf.setTextColor(255, 255, 255);\r\n        pdf.setFontSize(10);\r\n        pdf.text(processText(col.title), currentX + 2, currentY + 5);\r\n        currentX += colWidth;\r\n      });\r\n      currentY += rowHeight;\r\n      pdf.setTextColor(0, 0, 0);\r\n      \r\n      // Draw data\r\n      config.data.forEach((row, rowIndex) => {\r\n        currentX = startX;\r\n        if (rowIndex % 2 === 0) {\r\n          pdf.setFillColor(245, 245, 245);\r\n          pdf.rect(startX, currentY, pageWidth - 20, rowHeight, 'F');\r\n        }\r\n        \r\n        config.columns.forEach((col) => {\r\n          const cellValue = this.getCellValue(row, col, rowIndex + 1).toString();\r\n          pdf.setFontSize(9);\r\n          pdf.text(processText(cellValue), currentX + 2, currentY + 5);\r\n          pdf.setDrawColor(200, 200, 200);\r\n          pdf.rect(currentX, currentY, colWidth, rowHeight);\r\n          currentX += colWidth;\r\n        });\r\n        currentY += rowHeight;\r\n        \r\n        if (currentY > 180) {\r\n          pdf.addPage();\r\n          currentY = 20;\r\n          // Redraw headers\r\n          currentX = startX;\r\n          config.columns.forEach((col) => {\r\n            pdf.setFillColor(70, 130, 180);\r\n            pdf.rect(currentX, currentY, colWidth, rowHeight, 'F');\r\n            pdf.setTextColor(255, 255, 255);\r\n            pdf.setFontSize(10);\r\n            pdf.text(processText(col.title), currentX + 2, currentY + 5);\r\n            currentX += colWidth;\r\n          });\r\n          currentY += rowHeight;\r\n          pdf.setTextColor(0, 0, 0);\r\n        }\r\n      });\r\n      \r\n      // Add footer\r\n      const pageCount = pdf.getNumberOfPages();\r\n      for (let i = 1; i <= pageCount; i++) {\r\n        pdf.setPage(i);\r\n        pdf.setFontSize(8);\r\n        pdf.setTextColor(100, 100, 100);\r\n        pdf.text(processText(`المستخدم: ${config.userName}`), 20, 200);\r\n        pdf.text(processText(`تاريخ التصدير: ${this.formatDate(new Date(), 'yyyy-MM-dd HH:mm')}`), 200, 200);\r\n        pdf.text(processText(`صفحة ${i} من ${pageCount}`), 148, 200, { align: 'center' });\r\n      }\r\n      \r\n      // Save PDF\r\n      pdf.save(`${config.fileName}.pdf`);\r\n      \r\n    } catch (error) {\r\n      console.error('jsPDF Export Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private convertArabicForPDF(text: string): string {\r\n    // Comprehensive Arabic to English translation map for PDF compatibility\r\n    const arabicToEnglishTranslations: { [key: string]: string } = {\r\n      // Basic terms\r\n      'اسم الصنف': 'Item Name',\r\n      'رقم الصنف': 'Item Code',\r\n      'الكمية': 'Quantity',\r\n      'السعر': 'Price',\r\n      'المجموع': 'Total',\r\n      'المجموع الكلي': 'Grand Total',\r\n      'التاريخ': 'Date',\r\n      'الوصف': 'Description',\r\n      'المورد': 'Supplier',\r\n      'العميل': 'Customer',\r\n      'الحساب': 'Account',\r\n      'الرصيد': 'Balance',\r\n      'المخزون': 'Inventory',\r\n      'التسلسل': 'Serial',\r\n      'النوع': 'Type',\r\n      'الفئة': 'Category',\r\n      'الوحدة': 'Unit',\r\n      'التكلفة': 'Cost',\r\n      'الربح': 'Profit',\r\n      'نسبة الربح': 'Profit Rate',\r\n      'المبيعات': 'Sales',\r\n      'المشتريات': 'Purchases',\r\n      'المصروفات': 'Expenses',\r\n      'الايرادات': 'Revenue',\r\n      'الدفع': 'Payment',\r\n      'الاستلام': 'Receipt',\r\n      'المدين': 'Debit',\r\n      'الدائن': 'Credit',\r\n      'الاجمالي': 'Total',\r\n      'الصافي': 'Net',\r\n      'الخصم': 'Discount',\r\n      'الضريبة': 'Tax',\r\n      'الفاتورة': 'Invoice',\r\n      'السند': 'Voucher',\r\n      'القيد': 'Entry',\r\n      'المستند': 'Document',\r\n      'الملاحظات': 'Notes',\r\n      'التفاصيل': 'Details',\r\n      'العملة': 'Currency',\r\n      'جنيه': 'EGP',\r\n      'دولار': 'USD',\r\n      'يورو': 'EUR',\r\n      \r\n      // Units\r\n      'قطعة': 'Piece',\r\n      'كيلو': 'Kg',\r\n      'متر': 'Meter',\r\n      'لتر': 'Liter',\r\n      'جرام': 'Gram',\r\n      'علبة': 'Box',\r\n      'حبة': 'Item',\r\n      'زجاجة': 'Bottle',\r\n      'كيس': 'Bag',\r\n      'عبوة': 'Package',\r\n      \r\n      // Status terms\r\n      'مفعل': 'Active',\r\n      'غير مفعل': 'Inactive',\r\n      'متوفر': 'Available',\r\n      'غير متوفر': 'Unavailable',\r\n      'مكتمل': 'Complete',\r\n      'غير مكتمل': 'Incomplete',\r\n      'منتهي': 'Finished',\r\n      'قيد التنفيذ': 'In Progress',\r\n      \r\n      // Common phrases\r\n      'تقرير المخزون': 'Inventory Report',\r\n      'تقرير المبيعات': 'Sales Report',\r\n      'تقرير المشتريات': 'Purchase Report',\r\n      'تقرير الحسابات': 'Accounts Report',\r\n      'كشف الحساب': 'Account Statement',\r\n      'الميزانية': 'Balance Sheet',\r\n      'قائمة الدخل': 'Income Statement',\r\n      'التدفق النقدي': 'Cash Flow',\r\n      'المستخدم': 'User',\r\n      'تاريخ التصدير': 'Export Date',\r\n      'صفحة': 'Page',\r\n      'من': 'of',\r\n      'إلى': 'to',\r\n      'في': 'in',\r\n      'على': 'on',\r\n      'مع': 'with',\r\n      'بدون': 'without',\r\n      'كل': 'all',\r\n      'بعض': 'some',\r\n      'أخرى': 'other',\r\n      'جديد': 'new',\r\n      'قديم': 'old',\r\n      'كبير': 'large',\r\n      'صغير': 'small',\r\n      'عالي': 'high',\r\n      'منخفض': 'low',\r\n      'سريع': 'fast',\r\n      'بطيء': 'slow'\r\n    };\r\n\r\n    try {\r\n      let result = text;\r\n      \r\n      // First, try direct translation for common terms\r\n      for (const [arabic, english] of Object.entries(arabicToEnglishTranslations)) {\r\n        result = result.replace(new RegExp(arabic, 'g'), english);\r\n      }\r\n      \r\n      // If still contains Arabic, try word-by-word processing\r\n      if (/[\\u0600-\\u06FF]/.test(result)) {\r\n        const words = result.split(/\\s+/);\r\n        const translatedWords = words.map(word => {\r\n          const cleanWord = word.replace(/[^\\u0600-\\u06FF\\u0020-\\u007E]/g, '');\r\n          \r\n          // Check if word is in our dictionary\r\n          for (const [arabic, english] of Object.entries(arabicToEnglishTranslations)) {\r\n            if (cleanWord.includes(arabic) || arabic.includes(cleanWord)) {\r\n              return english;\r\n            }\r\n          }\r\n          \r\n          // If not found, use transliteration\r\n          return this.transliterateArabicForPDF(cleanWord);\r\n        });\r\n        \r\n        result = translatedWords.join(' ');\r\n      }\r\n      \r\n      return result;\r\n      \r\n    } catch (error) {\r\n      console.warn('Arabic conversion for PDF failed:', error);\r\n      // Fallback: simple character replacement\r\n      return this.transliterateArabicForPDF(text);\r\n    }\r\n  }\r\n\r\n  private transliterateArabicForPDF(text: string): string {\r\n    // Simple Arabic to Latin transliteration for PDF compatibility\r\n    const arabicToLatin: { [key: string]: string } = {\r\n      'ا': 'a', 'أ': 'a', 'إ': 'i', 'آ': 'aa',\r\n      'ب': 'b', 'ت': 't', 'ث': 'th', 'ج': 'j',\r\n      'ح': 'h', 'خ': 'kh', 'د': 'd', 'ذ': 'dh',\r\n      'ر': 'r', 'ز': 'z', 'س': 's', 'ش': 'sh',\r\n      'ص': 's', 'ض': 'd', 'ط': 't', 'ظ': 'z',\r\n      'ع': 'a', 'غ': 'gh', 'ف': 'f', 'ق': 'q',\r\n      'ك': 'k', 'ل': 'l', 'م': 'm', 'ن': 'n',\r\n      'ه': 'h', 'و': 'w', 'ي': 'y', 'ى': 'a',\r\n      'ة': 'h', 'ء': '', 'ئ': 'i', 'ؤ': 'u',\r\n      'لا': 'la', 'ال': 'al-',\r\n      // Numbers\r\n      '٠': '0', '١': '1', '٢': '2', '٣': '3', '٤': '4',\r\n      '٥': '5', '٦': '6', '٧': '7', '٨': '8', '٩': '9',\r\n      // Punctuation\r\n      '،': ',', '؛': ';', '؟': '?', '٪': '%'\r\n    };\r\n\r\n    let result = '';\r\n    for (const char of text) {\r\n      result += arabicToLatin[char] || char;\r\n    }\r\n    \r\n    // Clean up and capitalize first letter\r\n    result = result.replace(/\\s+/g, ' ').trim();\r\n    if (result) {\r\n      result = result.charAt(0).toUpperCase() + result.slice(1);\r\n    }\r\n    \r\n    return result || text;\r\n  }\r\n\r\n  async exportToExcel(config: ExportConfig): Promise<void> {\r\n    // Check data size\r\n    if (!await this.checkDataSize(config.data.length)) {\r\n      return;\r\n    }\r\n\r\n    const loading = await this.getLoadingController().create({\r\n      message: 'جاري تصدير ملف Excel...',\r\n      spinner: 'crescent'\r\n    });\r\n    await loading.present();\r\n\r\n    try {\r\n      // Create workbook\r\n      const wb = XLSX.utils.book_new();\r\n      \r\n      // Prepare data\r\n      const worksheetData = this.prepareExcelData(config);\r\n      \r\n      // Create worksheet\r\n      const ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n      \r\n      // Apply modern styling\r\n      this.applyModernExcelStyling(ws, config);\r\n      \r\n      // Set column widths\r\n      const colWidths = config.columns.map(col => ({ wch: col.width || 15 }));\r\n      ws['!cols'] = colWidths;\r\n      \r\n      // Add worksheet to workbook\r\n      XLSX.utils.book_append_sheet(wb, ws, 'البيانات');\r\n      \r\n      // Write file\r\n      XLSX.writeFile(wb, `${config.fileName}.xlsx`);\r\n      \r\n      await this.showSuccessToast('تم تصدير ملف Excel بنجاح');\r\n      \r\n    } catch (error) {\r\n      console.error('Excel Export Error:', error);\r\n      await this.showErrorToast('فشل في تصدير ملف Excel');\r\n    } finally {\r\n      await loading.dismiss();\r\n    }\r\n  }\r\n\r\n  private async checkDataSize(rowCount: number): Promise<boolean> {\r\n    if (rowCount === 0) {\r\n      await this.showErrorToast('لا توجد بيانات للتصدير');\r\n      return false;\r\n    }\r\n\r\n    if (rowCount > this.MAX_ROWS_LIMIT) {\r\n      await this.showErrorToast(`البيانات كثيرة جداً (${rowCount} صف). الحد الأقصى هو ${this.MAX_ROWS_LIMIT} صف`);\r\n      return false;\r\n    }\r\n\r\n    if (rowCount > this.MAX_ROWS_WARNING) {\r\n      return await this.showConfirmationAlert(\r\n        'تحذير',\r\n        `البيانات كثيرة (${rowCount} صف). قد يستغرق التصدير وقتاً طويلاً. هل تريد المتابعة؟`\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private async addArabicFontSupport(doc: jsPDF): Promise<void> {\r\n    try {\r\n      // Use Times font for better Unicode support\r\n      doc.setFont('times', 'normal');\r\n      doc.setFontSize(10);\r\n      doc.setCharSpace(0);\r\n      \r\n    } catch (error) {\r\n      console.warn('Arabic font setup failed, trying alternatives');\r\n      try {\r\n        // Try Courier as fallback\r\n        doc.setFont('courier', 'normal');\r\n      } catch (courierError) {\r\n        try {\r\n          // Final fallback to Helvetica\r\n          doc.setFont('helvetica', 'normal');\r\n        } catch (helveticaError) {\r\n          console.error('All font options failed');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private enableUTF8Support(doc: jsPDF): void {\r\n    try {\r\n      // Configure jsPDF for better Unicode handling\r\n      // Set document properties for UTF-8 support\r\n      doc.setProperties({\r\n        title: 'تقرير المخزون',\r\n        subject: 'Inventory Report',\r\n        author: 'ERP System',\r\n        creator: 'ERP Stock Management'\r\n      });\r\n    } catch (error) {\r\n      console.warn('UTF-8 support setup failed:', error);\r\n    }\r\n  }\r\n\r\n  private addPDFHeader(doc: jsPDF, config: ExportConfig): void {\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    \r\n    // Current date (RTL positioning)\r\n    doc.setFontSize(10);\r\n    const dateText = config.currentDate || this.formatDate(new Date(), 'yyyy-MM-dd') || '';\r\n    const dateWidth = doc.getTextWidth(dateText);\r\n    doc.text(dateText, pageWidth - dateWidth - 10, 10);\r\n    \r\n    // Title (centered, handle Arabic RTL)\r\n    doc.setFontSize(16);\r\n    const titleText = this.processArabicText(config.title);\r\n    const titleWidth = doc.getTextWidth(titleText);\r\n    doc.text(titleText, (pageWidth - titleWidth) / 2, 20);\r\n    \r\n    // Subtitle (centered, handle Arabic RTL)\r\n    if (config.subtitle) {\r\n      doc.setFontSize(12);\r\n      const subtitleText = this.processArabicText(config.subtitle);\r\n      const subtitleWidth = doc.getTextWidth(subtitleText);\r\n      doc.text(subtitleText, (pageWidth - subtitleWidth) / 2, 30);\r\n    }\r\n  }\r\n\r\n  private addPDFTable(doc: jsPDF, config: ExportConfig): void {\r\n    const startY = config.subtitle ? 40 : 30;\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const margin = 10;\r\n    const tableWidth = pageWidth - (margin * 2);\r\n    const columnWidth = tableWidth / config.columns.length;\r\n    \r\n    // Table headers\r\n    doc.setFontSize(10);\r\n    let currentY = startY;\r\n    \r\n    // Header background\r\n    doc.setFillColor(240, 240, 240);\r\n    doc.rect(margin, currentY, tableWidth, 10, 'F');\r\n    \r\n    // Header text (standard LTR positioning for better compatibility)\r\n    doc.setTextColor(0, 0, 0);\r\n    config.columns.forEach((col, index) => {\r\n      const x = margin + (index * columnWidth) + 2;\r\n      const headerText = this.processArabicText(col.title);\r\n      doc.text(headerText, x, currentY + 7);\r\n    });\r\n    \r\n    currentY += 10;\r\n    \r\n    // Table data\r\n    config.data.forEach((row, rowIndex) => {\r\n      if (currentY > doc.internal.pageSize.getHeight() - 30) {\r\n        doc.addPage();\r\n        currentY = 20;\r\n        \r\n        // Re-draw headers on new page\r\n        doc.setFontSize(10);\r\n        doc.setFillColor(240, 240, 240);\r\n        doc.rect(margin, currentY - 10, tableWidth, 10, 'F');\r\n        doc.setTextColor(0, 0, 0);\r\n        config.columns.forEach((col, index) => {\r\n          const x = margin + (index * columnWidth) + 2;\r\n          const headerText = this.processArabicText(col.title);\r\n          doc.text(headerText, x, currentY - 3);\r\n        });\r\n      }\r\n      \r\n      // Alternating row colors\r\n      if (rowIndex % 2 === 1) {\r\n        doc.setFillColor(250, 250, 250);\r\n        doc.rect(margin, currentY, tableWidth, 8, 'F');\r\n      }\r\n      \r\n      // Reset text color for data\r\n      doc.setTextColor(0, 0, 0);\r\n      config.columns.forEach((col, colIndex) => {\r\n        const x = margin + (colIndex * columnWidth) + 2;\r\n        let value = this.getCellValue(row, col, rowIndex + 1);\r\n        const processedValue = this.processArabicText(value);\r\n        \r\n        // Handle long text by truncating if necessary\r\n        const maxWidth = columnWidth - 4;\r\n        const textWidth = doc.getTextWidth(processedValue);\r\n        let displayText = processedValue;\r\n        \r\n        if (textWidth > maxWidth) {\r\n          // Truncate text if it's too long\r\n          let truncated = processedValue;\r\n          while (doc.getTextWidth(truncated + '...') > maxWidth && truncated.length > 1) {\r\n            truncated = truncated.slice(0, -1);\r\n          }\r\n          displayText = truncated + (truncated.length < processedValue.length ? '...' : '');\r\n        }\r\n        \r\n        doc.text(displayText, x, currentY + 6);\r\n      });\r\n      \r\n      currentY += 8;\r\n    });\r\n  }\r\n\r\n  private addPDFFooter(doc: jsPDF, config: ExportConfig): void {\r\n    const pageHeight = doc.internal.pageSize.getHeight();\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    \r\n    doc.setFontSize(8);\r\n    doc.setTextColor(0, 0, 0);\r\n    \r\n    // User info (left side)\r\n    const userText = this.processArabicText(`المستخدم: ${config.userName}`);\r\n    doc.text(userText, 10, pageHeight - 10);\r\n    \r\n    // Export date (right side)\r\n    const exportText = this.processArabicText(`تاريخ التصدير: ${this.formatDate(new Date(), 'yyyy-MM-dd HH:mm')}`);\r\n    const exportWidth = doc.getTextWidth(exportText);\r\n    doc.text(exportText, pageWidth - exportWidth - 10, pageHeight - 10);\r\n  }\r\n\r\n  private processArabicText(text: string): string {\r\n    if (!text) return '';\r\n    \r\n    try {\r\n      // Check if text contains Arabic characters\r\n      const hasArabic = /[\\u0600-\\u06FF\\u0750-\\u077F]/.test(text);\r\n      \r\n      if (hasArabic) {\r\n        // Convert to professional English equivalents that maintain meaning\r\n        return this.convertArabicToProfessionalEnglish(text);\r\n      }\r\n      \r\n      return text;\r\n    } catch (error) {\r\n      console.warn('Arabic text processing failed:', error);\r\n      return text;\r\n    }\r\n  }\r\n\r\n  private convertArabicToProfessionalEnglish(text: string): string {\r\n    try {\r\n      // Professional Arabic-to-English conversion for business terms\r\n      const professionalTranslations: { [key: string]: string } = {\r\n        // Report titles and headers\r\n        'تقرير المخزون': 'Inventory Report',\r\n        'تقرير': 'Report',\r\n        'المخزون الإفتتاحي': 'Opening Stock',\r\n        'المخزون (in stock)': 'Stock Qty',\r\n        'المخزون': 'Inventory',\r\n        \r\n        // Column headers\r\n        'التسلسل': 'Serial No.',\r\n        'معرف الصنف': 'Item ID',\r\n        'اسم الصنف (English)': 'Item Name (English)',\r\n        'اسم الصنف': 'Item Name',\r\n        'الصنف': 'Item',\r\n        'اسم مستعار (Alias)': 'Alias Name',\r\n        'اسم مستعار': 'Alias',\r\n        'الموديل (model)': 'Model',\r\n        'الموديل': 'Model',\r\n        'الكود (part no)': 'Part Number',\r\n        'الكود': 'Code',\r\n        'رقم القطعة': 'Part Number',\r\n        'الماركة (brand)': 'Brand',\r\n        'الماركة': 'Brand',\r\n        'اقل كمية (MSQ)': 'Min. Stock Qty',\r\n        'اقل كمية': 'Min. Qty',\r\n        'الحد الأدنى': 'Minimum',\r\n        'الوحده (unit)': 'Unit',\r\n        'الوحده': 'Unit',\r\n        'الوحدة': 'Unit',\r\n        'سعر الشراء (purch price)': 'Purchase Price',\r\n        'سعر الشراء': 'Purchase Price',\r\n        'سعر الوحده (selling price)': 'Selling Price',\r\n        'سعر الوحده': 'Unit Price',\r\n        'سعر البيع': 'Selling Price',\r\n        'نسبة الفائدة (profit perc)': 'Profit %',\r\n        'نسبة الفائدة': 'Profit %',\r\n        'الكمية المتاحة': 'Available Qty',\r\n        'الكمية': 'Quantity',\r\n        'المجموع': 'Total',\r\n        'اخر عملية بيع': 'Last Sale Date',\r\n        'الإفتتاحي': 'Opening',\r\n        'الإجراءات': 'Actions',\r\n        \r\n        // Common terms\r\n        'المستخدم': 'User',\r\n        'تاريخ التصدير': 'Export Date',\r\n        'صفحة': 'Page',\r\n        'من': 'of',\r\n        'إلى': 'to',\r\n        'في': 'on',\r\n        'التاريخ': 'Date',\r\n        'الوقت': 'Time',\r\n        \r\n        // Status and descriptions\r\n        'متوفر': 'Available',\r\n        'غير متوفر': 'Out of Stock',\r\n        'نشط': 'Active',\r\n        'غير نشط': 'Inactive',\r\n        'جديد': 'New',\r\n        'مستعمل': 'Used',\r\n        \r\n        // Numbers and measurements\r\n        'قطعة': 'Piece',\r\n        'قطع': 'Pieces',\r\n        'كيلو': 'Kg',\r\n        'جرام': 'Gram',\r\n        'متر': 'Meter',\r\n        'لتر': 'Liter'\r\n      };\r\n      \r\n      // First try exact phrase matches\r\n      let result = text.trim();\r\n      \r\n      // Sort by length (longest first) to match longer phrases before shorter ones\r\n      const sortedKeys = Object.keys(professionalTranslations).sort((a, b) => b.length - a.length);\r\n      \r\n      for (const arabicTerm of sortedKeys) {\r\n        if (result.includes(arabicTerm)) {\r\n          result = result.replace(new RegExp(arabicTerm, 'g'), professionalTranslations[arabicTerm]);\r\n        }\r\n      }\r\n      \r\n      // If no exact matches found, try word-by-word translation\r\n      if (result === text) {\r\n        const words = text.split(/\\s+/);\r\n        const translatedWords = words.map(word => {\r\n          const cleanWord = word.trim();\r\n          return professionalTranslations[cleanWord] || this.transliterateArabicWord(cleanWord);\r\n        });\r\n        result = translatedWords.join(' ');\r\n      }\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      console.warn('Professional Arabic conversion failed:', error);\r\n      return this.transliterateArabicWord(text);\r\n    }\r\n  }\r\n\r\n  private transliterateArabicWord(word: string): string {\r\n    // Fallback transliteration for unmapped words\r\n    const arabicToEnglishMap: { [key: string]: string } = {\r\n      'ا': 'a', 'أ': 'a', 'إ': 'i', 'آ': 'aa',\r\n      'ب': 'b', 'ت': 't', 'ث': 'th',\r\n      'ج': 'j', 'ح': 'h', 'خ': 'kh',\r\n      'د': 'd', 'ذ': 'dh',\r\n      'ر': 'r', 'ز': 'z',\r\n      'س': 's', 'ش': 'sh',\r\n      'ص': 's', 'ض': 'd',\r\n      'ط': 't', 'ظ': 'dh',\r\n      'ع': 'a', 'غ': 'gh',\r\n      'ف': 'f', 'ق': 'q',\r\n      'ك': 'k', 'ل': 'l',\r\n      'م': 'm', 'ن': 'n',\r\n      'ه': 'h', 'ة': 'h',\r\n      'و': 'w', 'ي': 'y',\r\n      'ى': 'a', 'ء': ''\r\n    };\r\n    \r\n    let result = '';\r\n    for (const char of word) {\r\n      result += arabicToEnglishMap[char] || char;\r\n    }\r\n    \r\n    // Capitalize first letter for better appearance\r\n    return result.charAt(0).toUpperCase() + result.slice(1).toLowerCase();\r\n  }\r\n\r\n  private fixArabicTextForPDF(text: string): string {\r\n    // Apply specific fixes for common Arabic text issues in PDF\r\n    let fixedText = text;\r\n    \r\n    // Fix common Arabic ligatures and complex characters that might not render well\r\n    const arabicFixes: { [key: string]: string } = {\r\n      // Replace complex ligatures with simpler forms\r\n      '\\uFEDF': 'لا', // Arabic ligature Lam-Alef\r\n      '\\uFEE0': 'لا', // Arabic ligature Lam-Alef with Hamza above\r\n      '\\uFEE1': 'لإ', // Arabic ligature Lam-Alef with Hamza below\r\n      '\\uFEE2': 'لإ', // Arabic ligature Lam-Alef with Hamza below\r\n      '\\uFEE3': 'لآ', // Arabic ligature Lam-Alef with Madda above\r\n      '\\uFEE4': 'لآ', // Arabic ligature Lam-Alef with Madda above\r\n      \r\n      // Fix other common problematic characters\r\n      '\\u064B': '', // Arabic Fathatan (remove diacritics that cause issues)\r\n      '\\u064C': '', // Arabic Dammatan\r\n      '\\u064D': '', // Arabic Kasratan\r\n      '\\u064E': '', // Arabic Fatha\r\n      '\\u064F': '', // Arabic Damma\r\n      '\\u0650': '', // Arabic Kasra\r\n      '\\u0651': '', // Arabic Shadda\r\n      '\\u0652': '', // Arabic Sukun\r\n    };\r\n    \r\n    // Apply fixes\r\n    Object.entries(arabicFixes).forEach(([problematic, replacement]) => {\r\n      fixedText = fixedText.replace(new RegExp(problematic, 'g'), replacement);\r\n    });\r\n    \r\n    return fixedText;\r\n  }\r\n\r\n  private addPDFHeaderWithTranslation(doc: jsPDF, config: ExportConfig): void {\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    \r\n    // Current date (left side)\r\n    doc.setFontSize(10);\r\n    const dateText = config.currentDate || this.formatDate(new Date(), 'yyyy-MM-dd') || '';\r\n    doc.text(dateText, 10, 10);\r\n    \r\n    // Title (centered, translated to English)\r\n    doc.setFontSize(16);\r\n    const titleText = this.processArabicText(config.title);\r\n    const titleWidth = doc.getTextWidth(titleText);\r\n    doc.text(titleText, (pageWidth - titleWidth) / 2, 20);\r\n    \r\n    // Subtitle (centered, translated to English)\r\n    if (config.subtitle) {\r\n      doc.setFontSize(12);\r\n      const subtitleText = this.processArabicText(config.subtitle);\r\n      const subtitleWidth = doc.getTextWidth(subtitleText);\r\n      doc.text(subtitleText, (pageWidth - subtitleWidth) / 2, 30);\r\n    }\r\n  }\r\n\r\n  private addPDFTableWithTranslation(doc: jsPDF, config: ExportConfig): void {\r\n    const startY = config.subtitle ? 40 : 30;\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const margin = 10;\r\n    const tableWidth = pageWidth - (margin * 2);\r\n    const columnWidth = tableWidth / config.columns.length;\r\n    \r\n    // Table headers\r\n    doc.setFontSize(10);\r\n    let currentY = startY;\r\n    \r\n    // Header background\r\n    doc.setFillColor(70, 114, 196); // Professional blue\r\n    doc.rect(margin, currentY, tableWidth, 10, 'F');\r\n    \r\n    // Header text (translated to English)\r\n    doc.setTextColor(255, 255, 255); // White text\r\n    config.columns.forEach((col, index) => {\r\n      const x = margin + (index * columnWidth) + 2;\r\n      const headerText = this.processArabicText(col.title);\r\n      doc.text(headerText, x, currentY + 7);\r\n    });\r\n    \r\n    currentY += 10;\r\n    \r\n    // Table data\r\n    doc.setTextColor(0, 0, 0); // Black text\r\n    config.data.forEach((row, rowIndex) => {\r\n      if (currentY > doc.internal.pageSize.getHeight() - 30) {\r\n        doc.addPage();\r\n        currentY = 20;\r\n        \r\n        // Re-draw headers on new page\r\n        doc.setFillColor(70, 114, 196);\r\n        doc.rect(margin, currentY - 10, tableWidth, 10, 'F');\r\n        doc.setTextColor(255, 255, 255);\r\n        config.columns.forEach((col, index) => {\r\n          const x = margin + (index * columnWidth) + 2;\r\n          const headerText = this.processArabicText(col.title);\r\n          doc.text(headerText, x, currentY - 3);\r\n        });\r\n        doc.setTextColor(0, 0, 0);\r\n      }\r\n      \r\n      // Alternating row colors\r\n      if (rowIndex % 2 === 1) {\r\n        doc.setFillColor(248, 249, 250);\r\n        doc.rect(margin, currentY, tableWidth, 8, 'F');\r\n      }\r\n      \r\n      config.columns.forEach((col, colIndex) => {\r\n        const x = margin + (colIndex * columnWidth) + 2;\r\n        let value = this.getCellValue(row, col, rowIndex + 1);\r\n        const processedValue = this.processArabicText(value);\r\n        \r\n        // Handle long text by truncating if necessary\r\n        const maxWidth = columnWidth - 4;\r\n        const textWidth = doc.getTextWidth(processedValue);\r\n        let displayText = processedValue;\r\n        \r\n        if (textWidth > maxWidth) {\r\n          let truncated = processedValue;\r\n          while (doc.getTextWidth(truncated + '...') > maxWidth && truncated.length > 1) {\r\n            truncated = truncated.slice(0, -1);\r\n          }\r\n          displayText = truncated + (truncated.length < processedValue.length ? '...' : '');\r\n        }\r\n        \r\n        doc.text(displayText, x, currentY + 6);\r\n      });\r\n      \r\n      currentY += 8;\r\n    });\r\n  }\r\n\r\n  private addPDFFooterWithTranslation(doc: jsPDF, config: ExportConfig): void {\r\n    const pageHeight = doc.internal.pageSize.getHeight();\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    \r\n    doc.setFontSize(8);\r\n    doc.setTextColor(0, 0, 0);\r\n    \r\n    // User info (left side, translated)\r\n    const userText = this.processArabicText(`المستخدم: ${config.userName}`);\r\n    doc.text(userText, 10, pageHeight - 10);\r\n    \r\n    // Export date (right side, translated)\r\n    const exportText = this.processArabicText(`تاريخ التصدير: ${this.formatDate(new Date(), 'yyyy-MM-dd HH:mm')}`);\r\n    const exportWidth = doc.getTextWidth(exportText);\r\n    doc.text(exportText, pageWidth - exportWidth - 10, pageHeight - 10);\r\n  }\r\n\r\n  private prepareExcelData(config: ExportConfig): any[][] {\r\n    const data: any[][] = [];\r\n    \r\n    // Add title row - will be styled later\r\n    const titleRow = new Array(config.columns.length).fill('');\r\n    titleRow[0] = config.title;\r\n    data.push(titleRow);\r\n    \r\n    // Add subtitle row if exists - will be styled later\r\n    if (config.subtitle) {\r\n      const subtitleRow = new Array(config.columns.length).fill('');\r\n      subtitleRow[0] = config.subtitle;\r\n      data.push(subtitleRow);\r\n    }\r\n    \r\n    // Add date row\r\n    const dateRow = new Array(config.columns.length).fill('');\r\n    dateRow[0] = config.currentDate || this.formatDate(new Date(), 'yyyy-MM-dd');\r\n    data.push(dateRow);\r\n    \r\n    data.push(new Array(config.columns.length).fill('')); // Empty row\r\n    \r\n    // Add column headers\r\n    data.push(config.columns.map(col => col.title));\r\n    \r\n    // Add data rows with serial number support\r\n    config.data.forEach((row, index) => {\r\n      const rowData = config.columns.map(col => this.getCellValue(row, col, index + 1));\r\n      data.push(rowData);\r\n    });\r\n    \r\n    // Add footer\r\n    data.push(new Array(config.columns.length).fill('')); // Empty row\r\n    const footerRow1 = new Array(config.columns.length).fill('');\r\n    footerRow1[0] = `المستخدم: ${config.userName}`;\r\n    data.push(footerRow1);\r\n    \r\n    const footerRow2 = new Array(config.columns.length).fill('');\r\n    footerRow2[0] = `تاريخ التصدير: ${this.formatDate(new Date(), 'yyyy-MM-dd HH:mm')}`;\r\n    data.push(footerRow2);\r\n    \r\n    return data;\r\n  }\r\n\r\n  private applyModernExcelStyling(ws: any, config: ExportConfig): void {\r\n    const numCols = config.columns.length;\r\n    const lastCol = this.numberToExcelColumn(numCols - 1);\r\n    \r\n    // Initialize merges array if it doesn't exist\r\n    if (!ws['!merges']) {\r\n      ws['!merges'] = [];\r\n    }\r\n    \r\n    let currentRow = 0;\r\n    \r\n    // Style and merge title row (row 1)\r\n    const titleCell = `A${currentRow + 1}`;\r\n    const titleMergeRange = `A${currentRow + 1}:${lastCol}${currentRow + 1}`;\r\n    \r\n    if (ws[titleCell]) {\r\n      ws[titleCell].s = {\r\n        font: { bold: true, sz: 18, color: { rgb: \"1F4E79\" } },\r\n        alignment: { horizontal: \"center\", vertical: \"center\" },\r\n        fill: { fgColor: { rgb: \"E7F3FF\" } },\r\n        border: {\r\n          top: { style: \"thin\", color: { rgb: \"1F4E79\" } },\r\n          bottom: { style: \"thin\", color: { rgb: \"1F4E79\" } },\r\n          left: { style: \"thin\", color: { rgb: \"1F4E79\" } },\r\n          right: { style: \"thin\", color: { rgb: \"1F4E79\" } }\r\n        }\r\n      };\r\n    }\r\n    \r\n    // Merge title cells\r\n    ws['!merges'].push(this.decodeRange(titleMergeRange));\r\n    currentRow++;\r\n    \r\n    // Style and merge subtitle row if exists\r\n    if (config.subtitle) {\r\n      const subtitleCell = `A${currentRow + 1}`;\r\n      const subtitleMergeRange = `A${currentRow + 1}:${lastCol}${currentRow + 1}`;\r\n      \r\n      if (ws[subtitleCell]) {\r\n        ws[subtitleCell].s = {\r\n          font: { bold: true, sz: 14, color: { rgb: \"2F75B5\" } },\r\n          alignment: { horizontal: \"center\", vertical: \"center\" },\r\n          fill: { fgColor: { rgb: \"F2F8FF\" } }\r\n        };\r\n      }\r\n      \r\n      ws['!merges'].push(this.decodeRange(subtitleMergeRange));\r\n      currentRow++;\r\n    }\r\n    \r\n    // Style date row\r\n    const dateCell = `A${currentRow + 1}`;\r\n    const dateMergeRange = `A${currentRow + 1}:${lastCol}${currentRow + 1}`;\r\n    \r\n    if (ws[dateCell]) {\r\n      ws[dateCell].s = {\r\n        font: { sz: 11, color: { rgb: \"666666\" } },\r\n        alignment: { horizontal: \"center\", vertical: \"center\" }\r\n      };\r\n    }\r\n    \r\n    ws['!merges'].push(this.decodeRange(dateMergeRange));\r\n    currentRow += 2; // Skip date row and empty row\r\n    \r\n    // Style column headers\r\n    const headerRowIndex = currentRow + 1;\r\n    for (let colIndex = 0; colIndex < numCols; colIndex++) {\r\n      const colLetter = this.numberToExcelColumn(colIndex);\r\n      const cellRef = `${colLetter}${headerRowIndex}`;\r\n      \r\n      if (ws[cellRef]) {\r\n        ws[cellRef].s = {\r\n          font: { bold: true, sz: 12, color: { rgb: \"FFFFFF\" } },\r\n          alignment: { horizontal: \"center\", vertical: \"center\" },\r\n          fill: { fgColor: { rgb: \"4472C4\" } },\r\n          border: {\r\n            top: { style: \"thin\", color: { rgb: \"FFFFFF\" } },\r\n            bottom: { style: \"thin\", color: { rgb: \"FFFFFF\" } },\r\n            left: { style: \"thin\", color: { rgb: \"FFFFFF\" } },\r\n            right: { style: \"thin\", color: { rgb: \"FFFFFF\" } }\r\n          }\r\n        };\r\n      }\r\n    }\r\n    \r\n    // Style data rows with alternating colors\r\n    const dataStartRow = headerRowIndex + 1;\r\n    const dataEndRow = dataStartRow + config.data.length - 1;\r\n    \r\n    for (let rowIndex = dataStartRow; rowIndex <= dataEndRow; rowIndex++) {\r\n      const isEvenRow = (rowIndex - dataStartRow) % 2 === 0;\r\n      const fillColor = isEvenRow ? \"FFFFFF\" : \"F8F9FA\";\r\n      \r\n      for (let colIndex = 0; colIndex < numCols; colIndex++) {\r\n        const colLetter = this.numberToExcelColumn(colIndex);\r\n        const cellRef = `${colLetter}${rowIndex}`;\r\n        \r\n        if (ws[cellRef]) {\r\n          ws[cellRef].s = {\r\n            font: { sz: 10 },\r\n            alignment: { horizontal: \"center\", vertical: \"center\" },\r\n            fill: { fgColor: { rgb: fillColor } },\r\n            border: {\r\n              top: { style: \"thin\", color: { rgb: \"E1E5E9\" } },\r\n              bottom: { style: \"thin\", color: { rgb: \"E1E5E9\" } },\r\n              left: { style: \"thin\", color: { rgb: \"E1E5E9\" } },\r\n              right: { style: \"thin\", color: { rgb: \"E1E5E9\" } }\r\n            }\r\n          };\r\n          \r\n          // Special formatting for currency columns\r\n          const column = config.columns[colIndex];\r\n          if (column && column.type === 'currency') {\r\n            ws[cellRef].s.alignment.horizontal = \"right\";\r\n          }\r\n          \r\n          // Special formatting for serial number column\r\n          if (column && column.key === 'serialNumber') {\r\n            ws[cellRef].s.font.bold = true;\r\n            ws[cellRef].s.fill = { fgColor: { rgb: \"E7F3FF\" } };\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  private numberToExcelColumn(num: number): string {\r\n    let column = '';\r\n    while (num >= 0) {\r\n      column = String.fromCharCode(65 + (num % 26)) + column;\r\n      num = Math.floor(num / 26) - 1;\r\n    }\r\n    return column;\r\n  }\r\n  \r\n  private decodeRange(range: string): any {\r\n    const parts = range.split(':');\r\n    const start = this.cellRefToCoords(parts[0]);\r\n    const end = this.cellRefToCoords(parts[1]);\r\n    \r\n    return {\r\n      s: { c: start.c, r: start.r },\r\n      e: { c: end.c, r: end.r }\r\n    };\r\n  }\r\n  \r\n  private cellRefToCoords(cellRef: string): { c: number, r: number } {\r\n    const match = cellRef.match(/([A-Z]+)(\\d+)/);\r\n    if (!match) return { c: 0, r: 0 };\r\n    \r\n    const col = match[1];\r\n    const row = parseInt(match[2]) - 1;\r\n    \r\n    let colNum = 0;\r\n    for (let i = 0; i < col.length; i++) {\r\n      colNum = colNum * 26 + (col.charCodeAt(i) - 64);\r\n    }\r\n    colNum -= 1;\r\n    \r\n    return { c: colNum, r: row };\r\n  }\r\n\r\n  private getCellValue(row: any, column: ExportColumn, serialNumber?: number): string {\r\n    let value: any;\r\n    \r\n    // Handle calculated fields\r\n    if (column.key === 'serialNumber') {\r\n      value = serialNumber || 1;\r\n    } else if (column.key === 'finalAmount') {\r\n      const total = parseFloat(row.tot_pr) || 0;\r\n      const discount = parseFloat(row.discount) || 0;\r\n      value = total - discount;\r\n    } else if (column.key === 'stockValue') {\r\n      const quantity = parseFloat(row.quantity) || 0;\r\n      const payPrice = parseFloat(row.pay_price) || 0;\r\n      value = quantity * payPrice;\r\n    } else if (column.key === 'profitPercentage') {\r\n      // Calculate profit percentage like in the component\r\n      const payPrice = parseFloat(row.pay_price) || 0;\r\n      const perchPrice = parseFloat(row.perch_price) || 0;\r\n      \r\n      if (!payPrice || !perchPrice || perchPrice === 0) {\r\n        value = 0;\r\n      } else {\r\n        value = ((payPrice - perchPrice) / perchPrice) * 100;\r\n      }\r\n    } else {\r\n      value = this.getNestedValue(row, column.key);\r\n    }\r\n    \r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    }\r\n    \r\n    switch (column.type) {\r\n      case 'currency':\r\n        return this.formatCurrency(value);\r\n      case 'date':\r\n        return this.formatDate(value, 'yyyy-MM-dd');\r\n      case 'number':\r\n        if (column.key === 'profitPercentage') {\r\n          // Format profit percentage with 2 decimal places and % sign\r\n          const numValue = parseFloat(value);\r\n          if (isNaN(numValue)) return '0.00%';\r\n          return `${numValue.toFixed(2)}%`;\r\n        }\r\n        return this.formatNumber(value);\r\n      default:\r\n        return value.toString();\r\n    }\r\n  }\r\n\r\n  private getNestedValue(obj: any, path: string): any {\r\n    return path.split('.').reduce((current, prop) => current && current[prop], obj);\r\n  }\r\n\r\n  private formatCurrency(value: any): string {\r\n    const numValue = parseFloat(value);\r\n    if (isNaN(numValue)) return '0.00';\r\n    \r\n    return new Intl.NumberFormat('en-US', {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }).format(numValue);\r\n  }\r\n\r\n  private formatNumber(value: any): string {\r\n    const numValue = parseFloat(value);\r\n    if (isNaN(numValue)) return '0';\r\n    \r\n    return new Intl.NumberFormat('en-US').format(numValue);\r\n  }\r\n\r\n  generateDynamicTitle(pageType: string): string {\r\n    const titles: { [key: string]: string } = {\r\n      'sales-record': 'تقرير المبيعات',\r\n      'purchase-record': 'تقرير المشتريات',\r\n      'item-stock': 'تقرير المخزون',\r\n      'cash2': 'تقرير الخزينة',\r\n      'statement2': 'كشف الحساب',\r\n      'spend-record2': 'تقرير المصروفات',\r\n      'balance-sheet2': 'الميزانية العمومية',\r\n      'sub-account2': 'تقرير الحسابات الفرعية'\r\n    };\r\n    \r\n    return titles[pageType] || 'تقرير';\r\n  }\r\n\r\n  generateDynamicSubtitle(pageType: string, filters: any): string {\r\n    let subtitle = '';\r\n    \r\n    if (filters.selectedAccount && filters.selectedAccount.sub_name) {\r\n      if (pageType === 'sales-record') {\r\n        subtitle += `العميل: ${filters.selectedAccount.sub_name}`;\r\n      } else if (pageType === 'purchase-record') {\r\n        subtitle += `المورد: ${filters.selectedAccount.sub_name}`;\r\n      } else {\r\n        subtitle += `الحساب: ${filters.selectedAccount.sub_name}`;\r\n      }\r\n    }\r\n    \r\n    if (filters.dateFilter) {\r\n      if (subtitle) subtitle += ' - ';\r\n      \r\n      if (filters.dateFilter.type === 'single' && filters.dateFilter.date) {\r\n        subtitle += `في تاريخ ${this.formatDateArabic(filters.dateFilter.date)}`;\r\n      } else if (filters.dateFilter.type === 'range' && filters.dateFilter.startDate && filters.dateFilter.endDate) {\r\n        subtitle += `في الفترة من ${this.formatDateArabic(filters.dateFilter.startDate)} إلى ${this.formatDateArabic(filters.dateFilter.endDate)}`;\r\n      }\r\n    }\r\n    \r\n    if (filters.searchTerm) {\r\n      if (subtitle) subtitle += ' - ';\r\n      subtitle += `البحث: ${filters.searchTerm}`;\r\n    }\r\n    \r\n    return subtitle;\r\n  }\r\n\r\n  private formatDateArabic(date: string): string {\r\n    if (!date) return '';\r\n    \r\n    const arabicMonths = [\r\n      'يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو',\r\n      'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'\r\n    ];\r\n    \r\n    const dateObj = new Date(date);\r\n    const day = dateObj.getDate();\r\n    const month = arabicMonths[dateObj.getMonth()];\r\n    \r\n    return `${day} ${month}`;\r\n  }\r\n\r\n  private async showSuccessToast(message: string): Promise<void> {\r\n    const toast = await this.getToastController().create({\r\n      message,\r\n      duration: 3000,\r\n      color: 'success',\r\n      position: 'top',\r\n      mode: 'ios'\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  private async showErrorToast(message: string): Promise<void> {\r\n    const toast = await this.getToastController().create({\r\n      message,\r\n      duration: 3000,\r\n      color: 'danger',\r\n      position: 'top',\r\n      mode: 'ios'\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  private async showConfirmationAlert(header: string, message: string): Promise<boolean> {\r\n    return new Promise(async (resolve) => {\r\n      const alert = await this.getAlertController().create({\r\n        header,\r\n        message,\r\n        buttons: [\r\n          {\r\n            text: 'إلغاء',\r\n            role: 'cancel',\r\n            handler: () => resolve(false)\r\n          },\r\n          {\r\n            text: 'متابعة',\r\n            handler: () => resolve(true)\r\n          }\r\n        ]\r\n      });\r\n      await alert.present();\r\n    });\r\n  }\r\n}"],"names":[],"sourceRoot":"webpack:///"}